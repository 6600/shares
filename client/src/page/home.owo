<template>
  <div class="show-box">
    <div class="show show-2" id="show2">
      <div class="title">大盘涨跌-散点图</div>
      <div class="chart chart-2" id="chart2"></div>
    </div>
    <div class="show show-3" id="show3">
      <div class="title">买/卖平均信息图</div>
      <div class="chart chart-3" id="chart3"></div>
    </div>
    <div class="show show-4" id="show4">
      <div class="title">大盘涨跌-散点图</div>
      <div class="chart chart-4" id="chart4"></div>
    </div>
    <div class="show show-1" id="show1">
      <div class="title">大盘涨跌-饼状图</div>
      <div class="chart chart-1" id="chart1"></div>
    </div>
    <div class="show show-5" id="show5">
      <div class="title">买入/卖出意愿-饼状图</div>
      <div class="chart chart-5" id="chart5"></div>
    </div>
    <div class="show show-6" id="show6">
      <div class="title">最近五笔交易手数</div>
      <div class="chart chart-6" id="chart6"></div>
    </div>
    <div class="show show-7" id="show7">
      <div class="title">最近五笔买卖占比</div>
      <div class="chart chart-7" id="chart7"></div>
    </div>
    <div class="right-bar" @name="rightBar"></div>
  </div>
</template>

<script>
  module.exports = {
    data: {
    },
    created: function () {
      this.getData('http://127.0.0.1:8003/show1').then((data) => {
        const chart1 = echarts.init(document.getElementById('chart1'))
        chart1.setOption({
          series : [
            {
              name: '概况',
              type: 'pie',
              radius : '60%',
              data: data,
              label: {
                position: 'inside',
                color: '#495A80',
                "formatter": '{b}: {d}%'
              },
              itemStyle: {
                emphasis: {
                  shadowBlur: 10,
                  shadowOffsetX: 0,
                  shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
              }
            }
          ],
          color: ['#9966CC', '#EAF048', '#F6D6FF']
        })
      })
      this.getData('http://127.0.0.1:8003/distribution').then((data) => {
        const chart2 = echarts.init(document.getElementById('chart2'))
        let chartConfig = {
          xAxis: {
            show: false
          },
          yAxis: {},
          legend: {
            top: 30,
            left: 5
          },
          grid: {
            left: 30,
            top: 120,
            bottom: 20,
            right: 30
          },
          tooltip: {
            formatter: function (obj) {
              const value = obj.value 
              return `${value[2]}: ${value[1]}%`
            }
          },
          series: []
        }
        
        for (let key in data) {
          chartConfig.series.push({
            symbolSize: 5,
            name: key,
            data: data[key],
            type: 'scatter',
            // markLine: {
            //   data : [
            //     {type : 'average', name: '平均值'}
            //   ]
            // }
          })
        }
        chart2.setOption(chartConfig)
      })
      this.getData('http://127.0.0.1:8003/transactionAve').then((data) => {
        const chart2 = echarts.init(document.getElementById('chart3'))
        // console.log(data[0])
        chart2.setOption({
          xAxis: {
            type: 'category',
            axisTick: {show: false},
            data: ['买/卖1', '买/卖2', '买/卖3', '买/卖4', '买/卖5']
          },
          legend: {
            left: 0,
            top: 35,
            data:['平均买价','平均卖价','平均买数','平均卖数']
          },
          yAxis: [
            {
              type: 'value',
              scale: true,
              name: '平均价格',
              max: 20,
              min: 12
            },
            {
              type: 'value',
              scale: true,
              name: '平均手数',
              max: 4000,
              min: 0
            }
          ],
          grid: {
            left: 30,
            top: 100,
            bottom: 20,
            right: 50
          },
          series: [
            {
              name: '平均买价',
              type: 'bar',
              label: {
                normal: {
                  show: true,
                  position: 'inside'
                }
              },
              data: data[0]
            },
            {
              name: '平均卖价',
              type: 'bar',
              label: {
                normal: {
                  show: true,
                  position: 'inside'
                }
              },
              data: data[2]
            },
            {
              name: '平均买数',
              type: 'line',
              label: {
                normal: {
                  show: true,
                  position: 'top'
                }
              },
              yAxisIndex: 1,
              data: data[1]
            },
            {
              name: '平均卖数',
              type: 'line',
              label: {
                normal: {
                  show: true,
                  position: 'top'
                }
              },
              yAxisIndex: 1,
              data: data[3]
            }
          ],
          color: ['#9966CC', '#00FF80', '#495A80', '#f17c67']
        })
        this.getChart4()
      })
    },
    getChart4: function () {
      this.getData('http://127.0.0.1:8003/VPB').then((data) => {
        const chart4 = echarts.init(document.getElementById('chart4'))
        chart4.setOption({
          xAxis: {
            type: 'value',
            name: '市盈率',
            max: 50,
            min: 0,
          },
          yAxis: {
            type: 'value',
            name: '市净率',
            max: 1,
            min: 0.6,
          },
          grid: {
            left: 30,
            top: 60,
            bottom: 20,
            right: 60
          },
          tooltip: {
            formatter: function (obj) {
              const value = obj.value
              return `${value[2]}:<br/>市净率: ${value[1]}<br/>市盈率: ${value[0]}<br/>平均成本: ${value[3].toFixed(4)}`
            }
          },
          series: [{
            symbolSize: function(data) {
              return (-data[3] * 100 + 10).toFixed(2);
            },
            data: data,
            type: 'scatter',
          }],
          color: ['#00FF80']
        })
        setTimeout(() => {
          this.getChart5()
        }, 0)
      })
    },
    getChart5: function () {
      this.getData('http://127.0.0.1:8003/SB').then((data) => {
        const chart5 = echarts.init(document.getElementById('chart5'))
        chart5.setOption({
          series : [
            {
              name: '买入/卖出意愿',
              type: 'pie',
              radius : '60%',
              data: data,
              label: {
                position: 'inside',
                "formatter": '{b}: {d}%'
              },
              itemStyle: {
                emphasis: {
                  shadowBlur: 10,
                  shadowOffsetX: 0,
                  shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
              }
            }
          ],
          color: ['#f17c67', '#495A80']
        })
        setTimeout(() => {
          this.wmjyl()
        }, 0)
      })
    },
    getData: (url) => {
      return new Promise((resolve, reject) => {
        const ajax = new XMLHttpRequest();
        //步骤二:设置请求的url参数,参数一是请求的类型,参数二是请求的url,可以带参数,动态的传递参数starName到服务端
        ajax.open('get', url)
        //步骤三:发送请求
        ajax.send()
        //步骤四:注册事件 onreadystatechange 状态改变就会调用
        ajax.onreadystatechange = function () {
          if (ajax.readyState == 4 &&ajax.status == 200) {
            resolve(JSON.parse(ajax.responseText).data)
          }
        }
      })
    },
    // 五秒交易量
    wmjyl: function () {
      this.getData('http://127.0.0.1:8003/wmjyl').then((data) => {
        // console.log(data)
        const chart6 = echarts.init(document.getElementById('chart6'))
        chart6.setOption({
          xAxis: {
            type: 'category',
            data: ['买', '卖']
          },
          grid: {
            left: 50,
            top: 40,
            bottom: 20,
            right: 20
          },
          yAxis: {
            type: 'value'
          },
          series: [{
            barWidth: 15,
            data: [data[1], data[3]],
            type: 'bar'
          }],
          color: ['#009fe9']
        })
        // 占比饼状图
        const chart7 = echarts.init(document.getElementById('chart7'))
        chart7.setOption({
          series : [
            {
              name: '五笔买卖占比',
              type: 'pie',
              radius : '60%',
              data: [
              {
                name: "卖",
                value: data[2]
              }, {
                name: "买",
                value: data[0]
              }],
              label: {
                position: 'inside',
                "formatter": '{b}: {d}%'
              },
              itemStyle: {
                emphasis: {
                  shadowBlur: 10,
                  shadowOffsetX: 0,
                  shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
              }
            }
          ],
          color: ['#f17c67', '#495A80']
        })
      })
    }
  }
</script>


<style lang="less">
  .show {
    position: relative;
    border: 1px solid #ccc;
    float: left;
    box-sizing: border-box;
    .title {
      position: absolute;
      background-color: skyblue;
      color: white;
      width: calc(100% - 20px);
      height: 26px;
      line-height: 25px;
      padding: 0 10px;
    }
  }
  .chart {
    width: 100%;
    height: 100%;
  }
  .show-1, .show-5, .show-6, .show-7 {
    width: 300px;
    height: 300px;
  }
  .show-2 {
    width: 100%;
    height: 400px;
  }
  .show-3 {
    width: 600px;
    height: 300px;
  }
  .show-4 {
    width: calc(100% - 600px);
    height: 300px;
  }
  .right-bar {
    right: -200px;
    height: 100%;
    width: 199px;
    position: fixed;
    background-color: white;
    border-left: 1px solid #ccc;
  }
  .right-bar-active {
    right: 0px;
  }
</style>